:root {
    --white: #ffffff;
    --black: #000000;
    --palecyan: #91d1ed;
    --lightpurple: #9e91f2;
    --search-bar-height: 60px;
    --search-line-height: 60px;
}
    
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.title-wrapper {
    line-height: 4rem; /* Bootstrap 4 switched to rems; easiest way to get at line-height */
    font-family: "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 60px;
    font-weight: 300;
    letter-spacing: -0.02em;
    width: 30%;
    padding-top: 15vh;
}

#translation-selector {
    margin-top: 10px;
    color: #999;
    z-index:99
}

.scroll-wrapper {
    font-size: 1rem;
    line-height: 1rem;
    letter-spacing: 0em; /* override inherited */
    transition: opacity .1s;
    z-index: 5;

}

#keep-scrolling {
    padding-top: 340px;
    position: absolute;
    width: 100%;
  }

  #animated-arrow {
    position: absolute;
    text-align: center;
    width: 30%;
  } 

  #animated-arrow p {
    text-transform: uppercase;
    font-weight: bold;
    display: block;
    margin-bottom: 0;
  }

  #animated-arrow svg {
    margin: 0 auto;
  }

  .bounce-animation {  
    animation-duration: 0.8s;
    -moz-animation-duration: 0.8s;
    -webkit-animation-duration: 0.8s;
    animation-name: slidein;
    -moz-animation-name: slidein;
    -webkit-animation-name: slidein;
    animation-iteration-count: infinite;
    -moz-animation-iteration-count: infinite;
    -webkit-animation-iteration-count: infinite;
    animation-direction: alternate;
    -moz-animation-direction: alternate;
    -webkit-animation-direction: alternate;
  }

  /* multiple keyframe definitions for browser agnosticity 8) */
  @keyframes slidein {
    from {top: 0;}
    to {top: 10px;}
  }  
  @-moz-keyframes slidein {
    from {top: 0;}
    to {top: 10px;}
  }
  @-webkit-keyframes slidein {
    from {top: 10px;}
    to {top: 0;}
  }
/* chaos image */
.chaos {
  position: relative;
}
.chaos > img {
  position:absolute;
  top:25%;
  left:0%;
} 
/* tree selectors */

.componentTree {
  /* display: inline-block;
  width: 100%;
  padding-bottom: 100%;
  vertical-align: top;
  overflow: hidden; */
  position: relative; /* needed for scrolling animation */
  z-index: 50;       /* needed for scrolling animation */
  opacity: 1;
  transition: opacity .1s;
}
/* font size for language options */
.language-options {
  font-size: 16px;
  z-index: 99;
}
text {
  text-shadow:
    -1px -1px 3px #fff,
    -1px  1px 3px #fff,
     1px -1px 3px #fff,
     1px  1px 3px #fff;
}
.node text {
  font: 16px sans-serif;
  text-shadow:
  -1px -1px 3px #fff,
  -1px  1px 3px #fff,
   1px -1px 3px #fff,
   1px  1px 3px #fff;
}
/* not the edges */
.node--internal circle {
  fill: rgb(235, 36, 36);
}

.node--internal text {
  text-shadow:
    -1px -1px 3px #fff,
    -1px  1px 3px #fff,
     1px -1px 3px #fff,
     1px  1px 3px #fff;
}

.link {
  fill: none;
  stroke-opacity: 0.4;
  stroke-width: 2.5px;
}

form {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: absolute;
  left: 20px;
  top: 20px;
}

label {
  display: block;
}
/* tooltips style */
div.tooltip {
  position: absolute;
  text-align: left;
  padding: 8px;
  font: 16px sans-serif;
  background: var(--palecyan);
  /* pale cyan */
  border: 0px;
  border-radius: 10px;
  pointer-events: none;
  cursor: pointer;
  display: flex;
  align-items: center;
}
/* search bar styles */

/* autocomplete */
.search-wrapper { /* keep all the elements for opacity and positioning */
  /* margin-top: 20px;

  padding-top: 2vh; */
  /* position: fixed; */
  opacity: 0;
  position: fixed;
  right: 5px;
  /* float: right; */
  transition: opacity .1s;
  z-index: 99;
}

/*the container must be positioned relative:*/
.autocomplete {
  position: relative;
  display: inline-block;
}

input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}

input[type=text] {
  background-color: #f1f1f1;
  border-radius: 25px;
  width: 100%;
}

input[type=submit] {
  background-color: DodgerBlue;
  border-radius: 25px;
  color: #fff;
  cursor: pointer;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4; 
}

/*when hovering an item:*/
.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}

/*when navigating through the items using the arrow keys:*/
.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}

/* if window is resized too much, then we display a disclaimer */

#resolution-disclaimer {
  display: none;
}
/* The @media CSS at-rule can be used to apply part of a style sheet based on the result of 
one or more media queries. With it, you specify a media query and a block of CSS to apply
to the document if and only if the media query matches the device on which the content is being used */

@media (max-width: 1200px) and (max-height: 800px) {
  #resolution-disclaimer {
    z-index: 10000;
    display: block;
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100vw;
    background: rgba(0,0,0,0.85);
  }

  #disclaimer-wrapper {
    width: 95vw;
    margin: 20px auto;
    color: #fff;
  }
} 

/* author's stamp */
  #labs {
    position: fixed;
    bottom: 0;
    margin-left: .2rem;
    margin-bottom: .2rem;
    background: transparent;
    color: #042E64;
    font-size: 9px;
    font-family: sans-serif;
}
